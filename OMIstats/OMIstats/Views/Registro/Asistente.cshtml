@model OMIstats.Models.Persona

@{
    // Sacando variables del ViewBag
    string errorInfo = ViewBag.errorInfo;
    OMIstats.Models.Persona usuario = ViewBag.usuario;
    OMIstats.Models.Estado estado = ViewBag.estado;
    OMIstats.Models.Olimpiada omi = ViewBag.omi;
    OMIstats.Models.TipoOlimpiada tipo = ViewBag.tipo;
    List<OMIstats.Models.Estado> estados = ViewBag.estados;
    OMIstats.Models.MiembroDelegacion md = ViewBag.md;
    OMIstats.Models.MiembroDelegacion.TipoAsistente tipoAsistente = ViewBag.tipoAsistente;
    bool hayResultados = ViewBag.hayResultados;
    string claveDisponible = ViewBag.claveDisponible;
    bool resubmit = ViewBag.resubmit;
    bool guardado = ViewBag.guardado;
    List<OMIstats.Ajax.BuscarEscuelas> escuelas = ViewBag.escuelas;
    string nombreEscuela = ViewBag.nombreEscuela;
    int claveEscuela = ViewBag.claveEscuela;
    int añoEscuela = ViewBag.añoEscuela;
    string nivelEscuela = ViewBag.nivelEscuela;
    bool escuelaPublica = ViewBag.publica;
    List<OMIstats.Models.SedeOnline> sedes = ViewBag.sedes;

    // Variables temporales para facilitar el resto del archivo
    bool nuevo = md == null;
    ViewBag.Title = errorInfo.Length > 0 ? "Error" : nuevo ? "Registro" : "Modificar";
    bool esSede = estado != null && omi.claveEstado == estado.clave;
    string claveEstado = estado != null ? estado.clave : md != null ? md.estado : "";
    bool esCompetidor = tipoAsistente == OMIstats.Models.MiembroDelegacion.TipoAsistente.COMPETIDOR || (nuevo && !resubmit && tipo != OMIstats.Models.TipoOlimpiada.NULL && !usuario.esSuperUsuario());
    bool mostrarClaveCbo = !hayResultados &&
                            (tipoAsistente == OMIstats.Models.MiembroDelegacion.TipoAsistente.COMPETIDOR ||
                            (!usuario.esSuperUsuario() && tipo != OMIstats.Models.TipoOlimpiada.NULL
                            && tipoAsistente == OMIstats.Models.MiembroDelegacion.TipoAsistente.NULL));
    bool puedeCambiarSelects = (nuevo || !hayResultados) && usuario.esSuperUsuario();
    bool escuelaDesconocida = claveEscuela == -1 && nombreEscuela.Length > 0;
    string claveCompetidor = md == null ? "" : md.clave;
    OMIstats.Models.TipoOlimpiada tipoOriginal = md == null ? OMIstats.Models.TipoOlimpiada.NULL : md.tipoOlimpiada;
    bool emergenciaRequerido = !usuario.esSuperUsuario() && (!omi.esOnline || esCompetidor);
}

@section AddToHead
{
    <link rel="stylesheet" href="~/Content/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="~/Content/registro.css" type="text/css" />
    <link rel="stylesheet" href="~/Content/fechas.css" type="text/css" />
    <link rel="stylesheet" href="~/Content/formas.css" type="text/css" />
}

@section Scripts
{
    <script src="~/Scripts/jquery-ui-1.8.20.min.js"></script>
    <script src="~/js/fechas.js"></script>
    <script src="~/js/formas.js"></script>
    <script src="~/js/profile.js"></script>
    <script src="~/js/registro.js"></script>
    <script>
        var OMI_minimo = @(DateTime.Today.Year - 80);
        var OMI_maximo = @(DateTime.Today.Year - 6);
        var currentClave = "@claveCompetidor";
        var estadoSede = "@(omi.esOnline ? "" : OMIstats.Models.Estado.obtenerEstadoConClave(omi.claveEstado).ISO)";
        var updating = @(md == null ? "false" : "true");
        var estados = {};
        var resubmit = @(resubmit ? "true" : "false");
        var hayResultados = @(hayResultados ? "true" : "false");
        var nombreEscuela = "@nombreEscuela";
        var claveEscuela = @claveEscuela;
        var anioEscuela = @añoEscuela;
        var nivelEscuela = "@nivelEscuela";
        var emergenciaRequerido = @(emergenciaRequerido ? "true" : "false");
        @if (errorInfo.Length == 0)
        {
            foreach(OMIstats.Models.Estado e in estados)
            {
        @(new MvcHtmlString("estados." + e.clave + "='" + e.ISO + "';"))
            }
        @(new MvcHtmlString("setUpAjax(\"" + Url.Content("~") + "\" + \"Registro/\", \"" + (usuario.esSuperUsuario() ? "" : estado.clave) + "\", \"" + omi.numero + "\");"))
        @(new MvcHtmlString("setUpSearch(\"" + tipo + "\");"))
        }
    </script>
}

<h1 class="titulo">@ViewBag.Title</h1>
@if (guardado)
{
    <div> Se han guardado los datos con éxito </div>
    @Html.ActionLink("Volver", "Delegacion", "Registro",
    new { omi = omi.numero, estado = estado != null ? estado.clave : null }, new { })
}
else if (errorInfo == "limite")
{
    <div class="errorTextoRojo"> Este estado ya llegó al limite de competidores </div>
    @Html.ActionLink("Volver", "Delegacion", "Registro",
    new { omi = omi.numero, estado = estado != null ? estado.clave : null }, new { })
}
else if (errorInfo == "permisos")
{
    <div class="errorTextoRojo"> No tienes permisos para realizar esta acción </div>
    @Html.ActionLink("Volver", "Delegacion", "Registro",
    new { omi = omi.numero, estado = estado != null ? estado.clave : null }, new { })
}
else if (errorInfo == "duplicado")
{
    <div class="errorTextoRojo"> El usuario que se quiere cambiar tiene clave duplicada, contacta a un administrador </div>
    @Html.ActionLink("Volver", "Delegacion", "Registro",
    new { omi = omi.numero, estado = estado != null ? estado.clave : null }, new { })
}
else if (errorInfo == "invalido")
{
    <div class="errorTextoRojo"> La clave seleccionada es inválida </div>
    @Html.ActionLink("Volver", "Delegacion", "Registro",
    new { omi = omi.numero, estado = estado != null ? estado.clave : null }, new { })
}
else if (errorInfo == "persona")
{
    <div class="errorTextoRojo"> La persona seleccionada es inválida </div>
    @Html.ActionLink("Volver", "Delegacion", "Registro",
    new { omi = omi.numero, estado = estado != null ? estado.clave : null }, new { })
}
else
{
if (md == null && !resubmit)
{
<div id="busqueda" class="panel">
    <div class="panel-heading"> Buscar participantes de años anteriores </div>
    <div class="panel-body">
        <div class="registro-controls">
            <input type="text" id="nombreBuscar" class="shiny-box grow-input" placeholder="Buscar por nombre"/>
            <button class="boton-registro" id="buscar" type="submit" onclick="buscar()">Buscar</button>
        </div>
        <ul id="tablaRegistro" style="display:none">
            @for(int i = 0; i < 10; i++)
            {
                <li style="display:none" id="@("resultados" + i)"><a class="a-sin-href" onclick="personaSeleccionada(this)"></a></li>
            }
            <li id="mas10" style="display:none" class="mas10">Mostrando solo los primeros 10 resultados</li>
        </ul>
        <div id="info" style="display:none" class="redefine">Si no encuentras a quien buscas, redefine tu búsqueda</div>
        <div id="noResults" style="display:none" class="loading errorTextoRojo">No se encontraron resultados</div>
        <div id="errorSearching" class="loading errorTextoRojo" style="display:none">Se produjo un error, por favor contacta a un administrador o a un miembro del COMI</div>
        <img id="searching" src="@(Url.Content("~/img/ajax-loader.gif"))" style="display:none" class="loading"/>
    </div>
</div>
}
<form name="asistente" id="asistente" action="~/Registro/Asistente" method="post" enctype="multipart/form-data">
<div class="panel panel-green datos-padding">
    <div class="panel-heading panel-heading-green">Datos del participante</div>
    <div class="panel-body">
    <div class="registro-controls">
        <div class="registro-single-control">
            <span class="control-title">Concurso<span class="errorTextoRojo">*</span></span>
            <select id="tipo" name="tipo" class="shiny-box" @(puedeCambiarSelects ? "" : "disabled") onchange="onOMIselected()">
                <option value="OMI" @(tipo == OMIstats.Models.TipoOlimpiada.OMI ? "selected" : "")>OMI</option>
                <option value="OMIS" @(tipo == OMIstats.Models.TipoOlimpiada.OMIS ? "selected" : "")>OMI Secundarias</option>
                <option value="OMIP" @(tipo == OMIstats.Models.TipoOlimpiada.OMIP ? "selected" : "")>OMI Primarias</option>
            </select>
        </div>
        <div class="registro-single-control"></div>
        <div class="registro-single-control"></div>
    </div>
    <div class="registro-controls">
        <div class="registro-single-control">
            <span class="control-title">Participar como<span class="errorTextoRojo">*</span></span>
            <select id="tipoAsistente" name="tipoAsistente" class="shiny-box" @(puedeCambiarSelects || (tipoAsistente != OMIstats.Models.MiembroDelegacion.TipoAsistente.COMPETIDOR && tipoAsistente != OMIstats.Models.MiembroDelegacion.TipoAsistente.NULL) || tipo == OMIstats.Models.TipoOlimpiada.NULL ? "" : "disabled") onchange="cambiaClavesCbo()">
                <option value=""></option>
                @if (puedeCambiarSelects || tipoAsistente == OMIstats.Models.MiembroDelegacion.TipoAsistente.COMPETIDOR || (nuevo && tipo != OMIstats.Models.TipoOlimpiada.NULL))
                {
                <option value="COMPETIDOR" @(tipoAsistente == OMIstats.Models.MiembroDelegacion.TipoAsistente.COMPETIDOR || (!usuario.esSuperUsuario() && tipo != OMIstats.Models.TipoOlimpiada.NULL) ? "selected" : "")>Competidor</option>
                }
                <option value="LIDER" @(tipoAsistente == OMIstats.Models.MiembroDelegacion.TipoAsistente.LIDER ? "selected" : "")>Líder</option>
                <option value="DELEGADO" @(tipoAsistente == OMIstats.Models.MiembroDelegacion.TipoAsistente.DELEGADO ? "selected" : "")>Delegado</option>
                <option value="ASESOR" @(tipoAsistente == OMIstats.Models.MiembroDelegacion.TipoAsistente.ASESOR ? "selected" : "")>Asesor</option>
                <option value="INVITADO" @(tipoAsistente == OMIstats.Models.MiembroDelegacion.TipoAsistente.INVITADO ? "selected" : "")>Invitado</option>
                @if (usuario.esSuperUsuario())
                {
                <option value="COMI" @(tipoAsistente == OMIstats.Models.MiembroDelegacion.TipoAsistente.COMI ? "selected" : "")>COMI</option>
                <option value="COLO" @(tipoAsistente == OMIstats.Models.MiembroDelegacion.TipoAsistente.COLO ? "selected" : "")>Comité local</option>
                }
                @if (usuario.esAdmin())
                {
                <option value="DELELIDER" @(tipoAsistente == OMIstats.Models.MiembroDelegacion.TipoAsistente.DELELIDER ? "selected" : "")>Delegado y líder</option>
                <option value="SUBLIDER" @(tipoAsistente == OMIstats.Models.MiembroDelegacion.TipoAsistente.SUBLIDER ? "selected" : "")>Sublider</option>
                }
            </select>
            <div id="errortipoAsistente" class="errorTextoRojo" style="display:none">Elige una opción</div>
        </div>
        <div class="registro-single-control">
            <span class="control-title">Estado al que representa<span class="errorTextoRojo">*</span></span>
            <select id="estado" name="estado" class="shiny-box" @(puedeCambiarSelects ? "" : "disabled") onchange="cambiaClavesCbo()">
                <option value=""></option>
            @for (int i = 0; i < estados.Count; i++)
            {
                OMIstats.Models.Estado e = estados[i];
                <option value="@e.clave" @(e.clave == claveEstado ? "selected" : "")>@(e.nombre)</option>
            }
            </select>
            <div id="errorestado" class="errorTextoRojo" style="display:none">Elige un estado</div>
        </div>
        <div class="registro-single-control" id="campoClave" style="@(mostrarClaveCbo ? "" : "opacity:0")">
            <span class="control-title">Clave<span class="errorTextoRojo">*</span></span>
            <select id="claveSelect" name="claveSelect" class="shiny-box" @(mostrarClaveCbo ? "" : "disabled")>
            @if (estado != null)
            {
                int maxParticipantes = omi.getMaxParticipantesDeEstado(estado.clave);
                for (int i = 1; i <= maxParticipantes; i++)
                {
                    var clave = estado.ISO + "-" + i;
                <option value="@(clave)" @((claveDisponible == clave) ? "selected" : "")>@(clave)</option>
                }
            }
            </select>
        </div>
    </div>
    <div class="registro-controls">
        <div class="registro-single-control">
            <span class="control-title">Nombre(s)<span class="errorTextoRojo">*</span></span>
            @Html.TextBoxFor(model => model.nombre, new { @class = "shiny-box" })
            @Html.ValidationMessageFor(model => model.nombre)
        </div>
        <div class="registro-single-control">
            <span class="control-title">Apellido Paterno<span class="errorTextoRojo">*</span></span>
            @Html.TextBoxFor(model => model.apellidoPaterno, new { @class = "shiny-box" })
            @Html.ValidationMessageFor(model => model.apellidoPaterno)
        </div>
        <div class="registro-single-control">
            <span class="control-title">Apellido Materno<span class="errorTextoRojo">*</span></span>
            @Html.TextBoxFor(model => model.apellidoMaterno, new { @class = "shiny-box" })
            @Html.ValidationMessageFor(model => model.apellidoMaterno)
        </div>
    </div>
    <div class="registro-controls">
        <div class="registro-single-control">
            <span class="control-title">Sexo<span class="errorTextoRojo">*</span></span>
            <select id="genero" name="genero" class="shiny-box">
                <option value=""></option>
                <option value="M" @(Model.genero == "M" ? "selected" : "")>Masculino</option>
                <option value="F" @(Model.genero == "F" ? "selected" : "")>Femenino</option>
            </select>
        </div>
        <div class="registro-single-control">
            <span class="control-title">Fecha de nacimiento<span class="errorTextoRojo">*</span></span>
            @Html.TextBoxFor(model => model.nacimiento, "{0:dd/MM/yyyy}", new { @class="shiny-box" })
            @Html.ValidationMessageFor(model => model.nacimiento, "No escribiste una fecha válida")
        </div>
        <div class="registro-single-control"></div>
    </div>
    <div class="registro-controls">
        <div class="registro-single-control">
            <span class="control-title">Correo electrónico<span class="errorTextoRojo">*</span></span>
            @Html.TextBoxFor(model => model.correo, new { @class = "shiny-box" })
            @Html.ValidationMessageFor(model => model.correo)
            <div id="errorcorreo" class="errorTextoRojo" style="display:none">Escribe un correo</div>
        </div>
        <div class="registro-single-control">
            <span class="control-title">Celular<span class="errorTextoRojo">*</span></span>
            @Html.TextBoxFor(model => model.celular, new { @class = "shiny-box" })
            @Html.ValidationMessageFor(model => model.celular)
            <div id="errorcelular" class="errorTextoRojo" style="display:none">Escribe un celular</div>
        </div>
        <div class="registro-single-control">
            <span class="control-title">Teléfono</span>
            @Html.TextBoxFor(model => model.telefono, new { @class = "shiny-box" })
            @Html.ValidationMessageFor(model => model.telefono)
        </div>
    </div>
    <div class="registro-controls">
        <div class="registro-single-control">
            <span class="control-title">Dirección</span>
            @Html.TextBoxFor(model => model.direccion, new { @class = "shiny-box" })
            @Html.ValidationMessageFor(model => model.direccion)
        </div>
    </div>
    <div class="registro-controls">
        <div class="registro-single-control">
            <span class="control-title">Usuario de OmageUp</span>
            @Html.TextBoxFor(model => model.omegaup, new { @class = "shiny-box" })
            @Html.ValidationMessageFor(model => model.omegaup)
        </div>
        <div class="registro-single-control">
            <span class="control-title">Foto <span style="font-weight:normal">(300KB max)</span></span>
            <input type="file" name="file" id="file"
                    class="@(ViewBag.errorImagen.Length == 0 ? "" : "input-validation-error")"/>
                @if (ViewBag.errorImagen == "imagen_invalida")
                {
                    <div class="errorTextoRojo">El archivo que enviaste no es una imagen</div>
                }
                else if (ViewBag.errorImagen == "imagen_muy_grande")
                {
                    <div class="errorTextoRojo">El limite de tamaño para una imagen es 300KB</div>
                }
        </div>
        <div class="registro-single-control">
            @if (omi.esOnline && esCompetidor && !usuario.esSuperUsuario())
            {
            <span class="control-title">Sede</span>
            <select id="sede" name="sede" class="shiny-box">
                <option value="0">--- Elige una sede ---</option>
                @foreach (OMIstats.Models.SedeOnline sede in sedes)
                {
                <option value="@sede.clave" @(md != null && md.sede == sede.clave ? "selected" : "")>@sede.nombre</option>
                }
            </select>
            }
        </div>
    </div>
</div>
</div>
<div class="panel panel-green datos-padding" id="bloqueEscuela" style="@(esCompetidor ? "" : "display:none")">
    <div class="panel-heading panel-heading-green">Datos de la escuela</div>
    <div class="panel-body" id="panelEscuela">
    <div class="registro-controls">
        <div class="registro-single-control">
            <span class="control-title">Elige una escuela<span class="errorTextoRojo">*</span></span>
            <select name="selectEscuela" id="selectEscuela" class="shiny-box" onchange="onEscuelaChanged()">
                <option></option>
                @if (escuelas != null)
                {
                    foreach (var escuela in escuelas)
                    {
                <option value="@escuela.clave" @(claveEscuela == escuela.clave ? "selected" : "")>@escuela.nombre</option>
                    }
                }
                <option value="-1" @(escuelaDesconocida ? "selected" : "")>--- La escuela no está listada ---</option>
            </select>
            <div id="errorselectEscuela" class="errorTextoRojo" style="display:none">Elige una escuela</div>
        </div>
    </div>
    <div class="registro-controls" id ="sectionNombreEscuela" style="@(escuelaDesconocida ? "" : "display:none")">
        <div class="registro-single-control">
            <span class="control-title">Escribe el nombre de la escuela<span class="errorTextoRojo">*</span>:</span>
            <input name="nombreEscuela" id="nombreEscuela" class="shiny-box" value="@(escuelaDesconocida ? nombreEscuela : "")"/>
            <div id="errornombreEscuela" class="errorTextoRojo" style="display:none">Escribe el nombre de la escuela</div>
        </div>
        <div class="registro-single-control">
            <span class="control-title">¿La escuela es pública o privada?</span>
            <select name="selectPublica" class="shiny-box">
                <option value="true">Pública</option>
                <option value="false" @(escuelaDesconocida && !escuelaPublica ? "selected" : "")>Privada</option>
            </select>
        </div>
    </div>
    <div class="registro-controls">
        <div class="registro-single-control">
            <span class="control-title">Nivel escolar<span class="errorTextoRojo">*</span></span>
            <select name="selectNivelEscolar" id="selectNivelEscolar" class="shiny-box" onchange="onNivelEscolar()">
                @if (tipo != OMIstats.Models.TipoOlimpiada.OMIP)
                {
                <option></option>
                }
                <option value="PRIMARIA" @(nivelEscuela == "PRIMARIA" ? "selected" : "")>Primaria</option>
                @if (tipo != OMIstats.Models.TipoOlimpiada.OMIP)
                {
                <option value="SECUNDARIA" @(nivelEscuela == "SECUNDARIA" ? "selected" : "")>Secundaria</option>
                    if (tipo != OMIstats.Models.TipoOlimpiada.OMIS)
                    {
                <option value="PREPARATORIA" @(nivelEscuela == "PREPARATORIA" ? "selected" : "")>Bachillerato/Preparatoria</option>
                    }
                }
            </select>
            <div id="errorselectNivelEscolar" class="errorTextoRojo" style="display:none">Elige el nivel escolar</div>
        </div>
        <div class="registro-single-control">
            <span class="control-title">Año escolar <img src="~/img/info.svg" title="Preparatorias cuenten por año y no por semestre. Empiecen en 1° y no en 4°" class="info-svg"/><span class="errorTextoRojo">*</span></span>
            <select name="selectAnioEscolar" id="selectAnioEscolar" class="shiny-box">
                <option></option>
                <option value="1" @(añoEscuela == 1 ? "selected" : "")>1°</option>
                <option value="2" @(añoEscuela == 2 ? "selected" : "")>2°</option>
                <option value="3" @(añoEscuela == 3 ? "selected" : "")>3°</option>
                @if (tipo == OMIstats.Models.TipoOlimpiada.OMIP || md != null && md.nivelEscuela == OMIstats.Models.Institucion.NivelInstitucion.PRIMARIA)
                {
                <option value="4" @(añoEscuela == 4 ? "selected" : "")>4°</option>
                <option value="5" @(añoEscuela == 5 ? "selected" : "")>5°</option>
                <option value="6" @(añoEscuela == 6 ? "selected" : "")>6°</option>
                }
            </select>
            <div id="errorselectAnioEscolar" class="errorTextoRojo" style="display:none">Elige el año escolar</div>
        </div>
    </div>
    </div>
    <div class="panel-body" id="panelSpinner" style="display:none">
        <img src="@(Url.Content("~/img/ajax-loader.gif"))" class="loading"/>
    </div>
    <div class="panel-body errorTextoRojo" id="panelError" style="display:none">
        Ocurrio un error <a class="a-sin-href" onclick="preparaAjaxEscuela()">Reintentar</a>
    </div>
</div>
<div class="panel">
    <div class="panel-heading"> Datos de emergencia </div>
    <div class="panel-body">
    <div class="registro-controls">
        <div class="registro-single-control">
            <span class="control-title">Nombre del contacto de emergencia
                @if(emergenciaRequerido)
                {
                <span class="errorTextoRojo">*</span>
                }
            </span>
            @Html.TextBoxFor(model => model.emergencia, new { @class = "shiny-box" })
            @Html.ValidationMessageFor(model => model.emergencia)
            <div id="erroremergencia" class="errorTextoRojo" style="display:none">Escribe un contacto de emergencia</div>
        </div>
        <div class="registro-single-control">
            <span class="control-title">Parentesco</span>
            @Html.TextBoxFor(model => model.parentesco, new { @class = "shiny-box" })
            @Html.ValidationMessageFor(model => model.parentesco)
        </div>
        <div class="registro-single-control">
            <span class="control-title">Teléfono de emergencia
                @if(emergenciaRequerido)
                {
                <span class="errorTextoRojo">*</span>
                }
            </span>
            @Html.TextBoxFor(model => model.telEmergencia, new { @class = "shiny-box" })
            @Html.ValidationMessageFor(model => model.telEmergencia)
            <div id="errortelEmergencia" class="errorTextoRojo" style="display:none">Escribe un teléfono</div>
        </div>
    </div>
    @if(!omi.esOnline)
    {
    <div class="registro-controls">
        <div class="registro-single-control">
            <span class="control-title">Medicina especial</span>
            @Html.TextBoxFor(model => model.medicina, new { @class = "shiny-box" })
            @Html.ValidationMessageFor(model => model.medicina)
        </div>
    </div>
    <div class="registro-controls">
        <div class="registro-single-control">
            <span class="control-title">Alergias</span>
            @Html.TextBoxFor(model => model.alergias, new { @class = "shiny-box" })
            @Html.ValidationMessageFor(model => model.alergias)
        </div>
    </div>
    }
    else
    {
        @Html.HiddenFor(model => model.medicina, new { @class = "shiny-box" })
        @Html.HiddenFor(model => model.alergias, new { @class = "shiny-box" })
    }
    </div>
</div>
<input id="omi" name="omi" type="hidden" value="@omi.numero" />
<input id="persona" name="persona" type="hidden" value="@Model.clave" />
<input id="claveOriginal" name="claveOriginal" type="hidden" value="@claveCompetidor" />
<input id="tipoOriginal" name="tipoOriginal" type="hidden" value="@tipoOriginal" />
<div class="boton-guardar">
    <button id="botonGuardar" onclick="return validar()" class="boton-registro">Guardar</button>
    <img class="textoRojo" id="loading" src="~/img/ajax-loader.gif" />
</div>
</form>
}
<div class="clear"></div>