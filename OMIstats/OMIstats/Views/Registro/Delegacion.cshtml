@model List<OMIstats.Models.MiembroDelegacion>

@{
    OMIstats.Models.Persona usuario = ViewBag.usuario;
    OMIstats.Models.Estado estado = ViewBag.estado;
    OMIstats.Models.Olimpiada omi = ViewBag.omi;
    List<OMIstats.Models.SedeOnline> sedes = ViewBag.sedes;
    Dictionary<int, List<OMIstats.Models.MiembroDelegacion>> miembrosPorSede = ViewBag.miembrosPorSede;
    int competidoresProcesados = 0;
    string lastEstado = "";
    bool hayResultados = ViewBag.hayResultados;
    bool errorPermisos = ViewBag.permisos;
    bool registroTerminado = Model.Count > 0 && !usuario.esSuperUsuario() ? Model[0].cerrado : false;
    bool invitaciones = ViewBag.invitaciones;
    string[] subTitulos;
    OMIstats.Models.TipoOlimpiada[] tipos;
    bool isOMIPOS = OMIstats.Utilities.TableManager.isOMIPOS(omi.tipoOlimpiada);
    bool? onsite = ViewBag.onsite;
    bool modoComi = usuario.esSuperUsuario() && onsite != true;
    bool llegamosASoloDiploma = false;
    if (isOMIPOS)
    {
        tipos = new OMIstats.Models.TipoOlimpiada[] {
            OMIstats.Models.TipoOlimpiada.OMIPO,
            OMIstats.Models.TipoOlimpiada.OMISO,
        };
        subTitulos = new string[] {
            "Competidores de categoría Primaria",
            "Competidores de categoría Secundaria",
        };
    }
    else
    {
        tipos = new OMIstats.Models.TipoOlimpiada[] {
            OMIstats.Models.TipoOlimpiada.OMI,
            OMIstats.Models.TipoOlimpiada.OMIP,
            OMIstats.Models.TipoOlimpiada.OMIS,
            OMIstats.Models.TipoOlimpiada.NULL,
            OMIstats.Models.TipoOlimpiada.NULL
        };
        subTitulos = new string[] {
            "Competidores de categoría OMI",
            "Competidores de categoría Primaria",
            "Competidores de categoría Secundaria",
            "Líderes, asesores e invitados",
            "No asistentes con diploma"
        };
    }
    if (errorPermisos)
    {
        ViewBag.Title = "Error";
    }
    else if (modoComi)
    {
        ViewBag.Title = "Registro";
    }
    else
    {
        ViewBag.Title = "Registro de delegación: " + estado.nombre;
    }
}

@section AddToHead
{
    <link href="~/Content/registro.css" type="text/css" rel="stylesheet" />
}

@section Scripts
{
    <script src="~/js/registro.js"></script>
    <script>
        @if(onsite == true)
        {
        @("removeBanners();")
        }
    </script>
    @if (!errorPermisos)
    {
    <script>
        setUpAjax("@(Url.Content("~"))" + "Registro/", "@(modoComi ? "" : estado.clave)", "@omi.numero", @omi.invitados);
    </script>
    }
}

<h1 class="titulo">@ViewBag.Title <img src="~/img/check.svg" class="@(registroTerminado ? "" : "oculto")"/></h1>

@if (errorPermisos)
{
    <div class="errorTextoRojo"> No tienes permisos para realizar esta acción </div>
    @Html.ActionLink("Volver", "Select", "Registro", new { tipo = omi.tipoOlimpiada }, new { })
}
else
{
<table>
@for (int i = 0; i < tipos.Length; i++)
{
    if (!modoComi)
    {
    <tr><td class="titulo-registro" colspan="2">@subTitulos[i]</td></tr>
    }
    competidoresProcesados = 0;
    foreach (OMIstats.Models.MiembroDelegacion miembro in Model)
    {
        registroTerminado |= miembro.cerrado;
        bool classeLinea = false;
        if (modoComi || (miembro.tipoOlimpiada == tipos[i] && miembro.tipo == OMIstats.Models.MiembroDelegacion.TipoAsistente.COMPETIDOR) || ((tipos[i] == OMIstats.Models.TipoOlimpiada.NULL && miembro.tipo != OMIstats.Models.MiembroDelegacion.TipoAsistente.COMPETIDOR) && miembro.soloDiploma == llegamosASoloDiploma))
        {
            if (!modoComi && (miembro.tipo == OMIstats.Models.MiembroDelegacion.TipoAsistente.COMI || miembro.tipo == OMIstats.Models.MiembroDelegacion.TipoAsistente.COLO))
            {
                continue;
            }
            competidoresProcesados++;
    <tr>
            @if (modoComi)
            {
                if (lastEstado != miembro.estado)
                {
                <td class="celda-estado">
                    @OMIstats.Models.Estado.obtenerEstadoConClave(miembro.estado).nombre
                    @if (miembro.cerrado)
                    {
                    <img src="~/img/check.svg" title="Registro terminado, click para reabrir" onclick="terminarRegistro('@omi.tipoOlimpiada','@miembro.estado')" style="cursor:pointer;height:20px"/>
                    }
                    else
                    {
                    <img src="~/img/close.png" title="Cerrar registro" onclick="terminarRegistro('@omi.tipoOlimpiada','@miembro.estado')" style="cursor:pointer;height:20px"/>
                    }
                    @{
                    lastEstado = miembro.estado;
                    classeLinea = true;
                     }
                </td>
                }
                else
                {
                <td></td>
                }
            }
        <td class="lineas-registro @(classeLinea ? "celda-estado" : "")">
            @miembro.nombreAsistente
            @if (modoComi && miembro.soloDiploma)
            {
            <img src="~/img/info.svg" title="Solo diploma" class="info-svg info-test"/>
            }
            @if (modoComi && miembro.puedeRegistrar)
            {
            <img src="~/img/info.svg" title="Puede regsitrar" class="info-svg"/>
            }
            @if (omi.esOnline && miembro.tipo == OMIstats.Models.MiembroDelegacion.TipoAsistente.COMPETIDOR && miembro.sede <= 0)
            {
            <img src="~/img/info.svg" title="Competidor no tiene sede" class="info-svg info-red"/>
            }
        </td>
        @if (modoComi)
        {
        <td class="lineas-registro clave-registro @(classeLinea ? "celda-estado" : "")">
            @if (miembro.tipoOlimpiada != OMIstats.Models.TipoOlimpiada.OMI && miembro.tipo == OMIstats.Models.MiembroDelegacion.TipoAsistente.COMPETIDOR)
            {
                @(miembro.tipoOlimpiada)
            }
        </td>
        }
        <td class="lineas-registro clave-registro @(classeLinea ? "celda-estado" : "")">
            @if ((usuario.esAdmin() && onsite != true) || miembro.tipo == OMIstats.Models.MiembroDelegacion.TipoAsistente.COMPETIDOR)
            {
            @miembro.clave
            }
            else
            {
            @miembro.tipo
            }
        </td>
        <td class="@(classeLinea ? "celda-estado" : "")">
            @if ((modoComi || !registroTerminado) && onsite != true)
            {
            <a onclick="iniciaRegistro('@miembro.tipoOlimpiada', '@miembro.clave')" class="a-sin-href">Modificar</a>
                if (!hayResultados && (modoComi || omi.registroActivo))
                {
            <a onclick="eliminarUsuario('@miembro.tipoOlimpiada', '@miembro.clave', '@miembro.nombreAsistente')" class="a-sin-href">Eliminar</a>
                }
            }
            @if (usuario.esAdmin() && miembro.cerrado)
            {
                @(".")
            }
        </td>
    </tr>
        }
    }
    if (tipos[i] == OMIstats.Models.TipoOlimpiada.NULL)
    {
        llegamosASoloDiploma = true;
    }
    if (competidoresProcesados == 0)
    {
    <tr><td class="lineas-registro no-registrados" colspan="2">No se ha registrado a nadie</td></tr>
    }
    if (modoComi || (omi.registroActivo && !registroTerminado && (tipos[i] == OMIstats.Models.TipoOlimpiada.NULL || competidoresProcesados < omi.getMaxParticipantesDeEstado(estado.clave))))
    {
    <tr><td>
        <a onclick="iniciaRegistro('@tipos[i]')" class="a-sin-href">Registrar</a>
    </td>
        @if (modoComi)
        {
            <td>
            @Html.ActionLink("CSV con todo", "GetCSV", "Registro", new { omi = omi.numero, tipo = omi.tipoOlimpiada }, new { })
            @if (isOMIPOS)
            {
            <br />
            @Html.ActionLink("CSV para OmegaUp: OMIP", "GetCSV", "Registro", new { omi = omi.numero, tipo = OMIstats.Models.TipoOlimpiada.OMIPO, paraOmegaUp = true }, new { })
            <br />
            @Html.ActionLink("CSV para OmegaUp: OMIS", "GetCSV", "Registro", new { omi = omi.numero, tipo = OMIstats.Models.TipoOlimpiada.OMISO, paraOmegaUp = true }, new { })
            }
            else
            {
            <br />
            @Html.ActionLink("CSV para OmegaUp: OMI", "GetCSV", "Registro", new { omi = omi.numero, tipo = OMIstats.Models.TipoOlimpiada.OMI, paraOmegaUp = true }, new { })
            <br />
            @Html.ActionLink("CSV para OmegaUp: OMIP", "GetCSV", "Registro", new { omi = omi.numero, tipo = OMIstats.Models.TipoOlimpiada.OMIP, paraOmegaUp = true }, new { })
            <br />
            @Html.ActionLink("CSV para OmegaUp: OMIS", "GetCSV", "Registro", new { omi = omi.numero, tipo = OMIstats.Models.TipoOlimpiada.OMIS, paraOmegaUp = true }, new { })
            }
            </td>
        }
        @if (usuario.esAdmin() && onsite != true)
        {
            <td></td>
            <td></td>
            <td>
            @Html.ActionLink("Generar invitaciones", "GeneraInvitaciones", "Registro", new { omi = omi.numero }, new { })
            </td>
        }
    </tr>
    }
    if (modoComi)
    {
        break;
    }
}
</table>

if (omi.esOnline)
{
<h1 class="titulo">Sedes</h1>
    if (sedes.Count == 0)
    {
<div class="no-registrados"> No se han registrado sedes </div>
    }
    else
    {
<table>
    <tr>
        @if (modoComi)
        {
        <td class="titulo-registro">Estado</td>
        }
        <td class="titulo-registro">Sede</td>
        @if (modoComi)
        {
        <td class="titulo-registro">Supervisor</td>
        <td class="titulo-registro">Teléfono</td>
        <td class="titulo-registro">Correo</td>
        }
        <td class="titulo-registro">Competidores en sede</td>
        <td></td>
    </tr>
        @for (int i = 0; i < sedes.Count; i++)
        {
            List<OMIstats.Models.MiembroDelegacion> miembrosEnSede = miembrosPorSede[sedes[i].clave];
    <tr>
           @if (modoComi)
           {
        <td class="lineas-registro clave-registro">@OMIstats.Models.Estado.obtenerEstadoConClave(sedes[i].estado).nombre</td>
           }
        <td class="lineas-registro">@sedes[i].nombre</td>
           @if (modoComi)
           {
        <td class="lineas-registro">@sedes[i].supervisor
            @if (sedes[i].supervisor2 != "")
            {
            <br />@sedes[i].supervisor2
                if (sedes[i].supervisor3 != "")
                {
            <br />@sedes[i].supervisor3
                }
            }
        </td>
        <td class="lineas-registro">@sedes[i].telefono
            @if (sedes[i].telefono2 != "")
            {
            <br />@sedes[i].telefono2
                if (sedes[i].telefono3 != "")
                {
            <br />@sedes[i].telefono3
                }
            }
        </td>
        <td class="lineas-registro">@sedes[i].correo
            @if (sedes[i].correo2 != "")
            {
            <br />@sedes[i].correo2
                if (sedes[i].correo3 != "")
                {
            <br />@sedes[i].correo3
                }
            }
        </td>
           }
        <td class="lineas-registro">@miembrosEnSede.Count</td>
           @if (usuario.esAdmin() || (!modoComi && omi.registroSedes))
           {
        <td>
            @if (modoComi || !registroTerminado)
            {
            @Html.ActionLink("Modificar", "Sede", "Registro", new { omi = sedes[i].omi, estado = sedes[i].estado, clave = sedes[i].clave, tipo = omi.tipoOlimpiada }, new { })
                if (miembrosEnSede.Count == 0)
                {
            <a onclick="eliminarSede(@sedes[i].clave, '@sedes[i].nombre')" class="a-sin-href">Eliminar</a>
                }
                else
                {
            <a class="desabilitado" title="Para borrar esta sede primero reasigne a los alumnos de esta sede">Eliminar</a>
                }
            }
        </td>
           }
    </tr>
           if (!modoComi)
           {
               foreach (var miembro in miembrosEnSede)
               {
    <tr>
        <td></td>
        <td class="tiny-text">@miembro.nombreAsistente</td>
    </tr>
               }
           }
        }
</table>
    }
    if (!modoComi && omi.registroSedes && !registroTerminado)
    {
        @Html.ActionLink("Registrar sede", "Sede", "Registro", new { omi = omi.numero, estado = estado.clave, tipo = omi.tipoOlimpiada }, new { })
    }
}
if (!omi.esOnline && modoComi)
{
    DateTime now = DateTime.Now;
    if (now >= omi.inicio && now < omi.inicio.AddDays(1))
    {
    <br />
    <br />
    @Html.ActionLink("Registro On-site", "Onsite", "Registro", new { @class = "mini-boton" })
    }
}
if (!usuario.esSuperUsuario())
{
    if (invitaciones)
    {
    <br />
    <br />
    @Html.ActionLink("Bajar invitaciones", "Invitaciones", "Registro", new { omi = omi.numero, estado = estado.clave }, new { })
    }
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    if (!registroTerminado)
    {
    <input onclick="terminarRegistro('@omi.tipoOlimpiada')" type="button" value="Terminar registro" class="errorTextoRojo"/>
    }
}
if (onsite == true)
{
    <br />
    <br />
    @Html.ActionLink("Elegir estado", "Select", "Registro", new { @class = "mini-boton" });
}
}