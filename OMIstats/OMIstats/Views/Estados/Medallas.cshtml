@model List<OMIstats.Models.Estado>

@section AddToHead
{
    <link rel="stylesheet" href="~/Content/formas.css" type="text/css" />
    <link rel="stylesheet" href="~/Content/profile.css" type="text/css" />
    <link rel="stylesheet" href="~/Content/tablas.css" type="text/css" />
    <link rel="stylesheet" href="~/Content/olimpiadas.css" type="text/css"/>
    <link rel="stylesheet" href="~/Content/estados.css" type="text/css"/>
}

@{
    ViewBag.Title = "Medallas de los estados por olimpiada";
    List<OMIstats.Models.Olimpiada> olimpiadas = ViewBag.olimpiadas;
    Dictionary<string, Dictionary<string, OMIstats.Models.Medallero>> estados = ViewBag.estados;
    bool[] cabeceras = ViewBag.cabeceras;
    OMIstats.Utilities.TableManager tableManager = new OMIstats.Utilities.TableManager();
}

<div class="submenu">
    @Html.ActionLink("Delegados", "Index", "Estados", null, new { @class = "mini-boton" })
    <br />
    @Html.ActionLink("Lugares", "Lugares", "Estados", null, new { @class = "mini-boton" })
</div>

<h1 class="titulo">@ViewBag.Title</h1>

<div class="clone-wrapper" id="clone-wrapper">
<div class="table-wrapper">
<table class="table floating-column">
    <thead>
        <tr class="table-header">
            <th class="bottom-border right-border white-background header-min-height double-decker-placeholder" rowspan="2">Estado</th>
        </tr>
    </thead>
    @foreach (OMIstats.Models.Estado e in Model)
    {
    <tr>
        <td class="table-td right-border first-column-placeholder">
            <a class="nombre" href="@Url.Content("~/Estado?clave=" + e.clave)">@e.nombre</a>
        </td>
    </tr>
    }
    <tfoot>
        <tr>
            <td class="right-border top-border pie pieTitulo table-footer white-background first-column-placeholder">
                Total Medallas
            </td>
        </tr>
    </tfoot>
</table>
<table class="table">
    <thead>
        <tr class="table-header">
            <th class="empty-double-decker-placeholder" rowspan="2"></th>
            @for (int i = cabeceras.Length - 1; i >= 0 ; i--)
            {
                if (cabeceras[i] && olimpiadas[i].estados > 0)
                {
                <th class="bottom-border center headerEstado header-min-height right-border" colspan="3">
                    @Html.ActionLink(tableManager.enlaceOMI(olimpiada: olimpiadas[i].numero), "Estados", "Olimpiada",
                        new { clave = olimpiadas[i].numero }, null)
                </th>
                }
            }
            <th class="bottom-border center headerEstado header-min-height" colspan="3">Total</th>
        </tr>
        <tr class="table-header">
            @for (int i = cabeceras.Length - 1; i >= 0 ; i--)
            {
                if (cabeceras[i] && olimpiadas[i].estados > 0)
                {
                <th class="bottom-border center headerEstado header-min-height" title="Medallas de oro"><img src="~/img/oro.png" class="medalla-img-titulo"/></th>
                <th class="bottom-border center headerEstado header-min-height" title="Medallas de plata"><img src="~/img/plata.png" class="medalla-img-titulo"/></th>
                <th class="bottom-border center headerEstado header-min-height right-border" title="Medallas de bronce"><img src="~/img/bronce.png" class="medalla-img-titulo"/></th>
                }
            }
            <th class="bottom-border center headerEstado header-min-height" title="Medallas de oro"><img src="~/img/oro.png" class="medalla-img-titulo"/></th>
            <th class="bottom-border center headerEstado header-min-height" title="Medallas de plata"><img src="~/img/plata.png" class="medalla-img-titulo"/></th>
            <th class="bottom-border center headerEstado header-min-height" title="Medallas de bronce"><img src="~/img/bronce.png" class="medalla-img-titulo"/></th>
        </tr>
    </thead>
    @foreach (OMIstats.Models.Estado e in Model)
    {
    <tr>
        <td class="empty-first-column-placeholder"></td>
        @{Dictionary<string, OMIstats.Models.Medallero> medalleros = estados[e.clave];}
        @for (int i = cabeceras.Length - 1; i >= 0 ; i--)
        {
            if (cabeceras[i] && olimpiadas[i].estados > 0)
            {
                OMIstats.Models.Medallero medallero;
                medalleros.TryGetValue(olimpiadas[i].numero, out medallero);
                if (medallero != null)
                {
                <td class="table-td center fondoOro">@medallero.oros</td>
                <td class="table-td center fondoPlata">@medallero.platas</td>
                <td class="table-td center fondoBronce right-border">@medallero.bronces</td>
                }
                else
                {
                <td class="table-td center" title="No participó">-</td>
                <td class="table-td center" title="No participó">-</td>
                <td class="table-td center right-border" title="No participó">-</td>
                }
            }
        }
        <td class="table-td center resultado-dia fondoOro"></td>
        <td class="table-td center resultado-dia fondoPlata"></td>
        <td class="table-td center resultado-dia fondoBronce"></td>
    </tr>
    }
    <tfoot>
        <tr>
            <td class="empty-first-column-placeholder"></td>
            @for (int i = cabeceras.Length - 1; i >= 0 ; i--)
            {
                if (cabeceras[i] && olimpiadas[i].estados > 0)
                {
                <td class="center resultado-dia top-border pie fondoOro"></td>
                <td class="center resultado-dia top-border pie fondoPlata"></td>
                <td class="center resultado-dia top-border pie right-border fondoBronce"></td>
                }
            }
            <td class="top-border"></td>
            <td class="top-border"></td>
            <td class="top-border"></td>
        </tr>
    </tfoot>
</table>
</div>
</div>